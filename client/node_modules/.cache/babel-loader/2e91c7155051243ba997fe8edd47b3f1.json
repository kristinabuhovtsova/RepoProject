{"ast":null,"code":"var _jsxFileName = \"/Users/kristinabuhovtsova/Documents/Countries/client/src/components/SignInForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { SubmissionError } from 'redux-form';\nimport axios from 'axios';\nimport signInAction from '../actions/signInAction';\nimport store from '../store';\nimport '../css/Button.css';\nimport { connect } from 'react-redux';\nimport { LoadStatAction, StatHasLoaded } from '../actions/LoadStatAction';\n\nfunction FetchingStatAction() {\n  return dispatch => {\n    console.log('in fetching');\n    dispatch(LoadStatAction(true));\n    fetch('/catalog/statistics').then(response => {\n      dispatch(LoadStatAction(false));\n      return response;\n    }).then(response => response.json()).then(items => {\n      console.log(items);\n      dispatch(StatHasLoaded(items));\n    });\n  };\n}\n\nfunction signin(values) {\n  return axios.get('catalog/reqsignin', {\n    params: {\n      username: values.username,\n      password: values.password\n    }\n  }).then(res => {\n    if (res.data) {\n      console.log(res.data);\n      store.dispatch(signInAction({\n        'name': values.username,\n        'country': res.data\n      }));\n      FetchingStatAction();\n    } else {\n      throw new SubmissionError({\n        password: 'Wrong username or password',\n        username: 'Wrong username or password',\n        _error: 'Wrong username or password!'\n      });\n    }\n  });\n}\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, label), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({}, input, {\n  placeholder: label,\n  type: type,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, warning))));\n/* вернуть в форму onSubmit={handleSubmit(signin) */\n\n\nclass SignInForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      finished: null\n    };\n    this.Clear = this.Clear.bind(this);\n  }\n\n  Clear() {\n    this.setState({\n      finished: true\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          reset = _this$props.reset,\n          submitting = _this$props.submitting;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit(signin),\n      className: \"col-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"username\",\n      type: \"text\",\n      component: renderField,\n      label: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"password\",\n      type: \"password\",\n      component: renderField,\n      label: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-outline-primary signinbut\",\n      type: \"submit\",\n      onClick: this.Clear,\n      disabled: submitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(\"button\", {\n      className: \"btn btn-outline-primary clear signinbut\",\n      type: \"button\",\n      disabled: pristine || submitting,\n      onClick: reset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Clear Values\"));\n  }\n\n}\n\nexport default reduxForm({\n  form: 'SignInForm'\n})(SignInForm);","map":{"version":3,"sources":["/Users/kristinabuhovtsova/Documents/Countries/client/src/components/SignInForm.js"],"names":["React","Field","reduxForm","SubmissionError","axios","signInAction","store","connect","LoadStatAction","StatHasLoaded","FetchingStatAction","dispatch","console","log","fetch","then","response","json","items","signin","values","get","params","username","password","res","data","_error","renderField","input","label","type","meta","touched","error","warning","SignInForm","Component","constructor","props","state","finished","Clear","bind","setState","render","handleSubmit","pristine","reset","submitting","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Field, reduxForm} from 'redux-form'\nimport { SubmissionError } from 'redux-form';\nimport axios from 'axios'\nimport signInAction from '../actions/signInAction';\nimport store from '../store';\nimport '../css/Button.css';\nimport { connect } from 'react-redux';\nimport {LoadStatAction, StatHasLoaded} from '../actions/LoadStatAction'\nfunction FetchingStatAction() {\n  return (dispatch) => {\n    console.log('in fetching')\n      dispatch(LoadStatAction(true));\n      fetch('/catalog/statistics')\n          .then((response) => {\n              dispatch(LoadStatAction(false));\n              return response;\n          })\n          .then((response) => response.json())\n          .then((items) => {console.log(items);dispatch(StatHasLoaded(items))})\n  };\n}\n\n\nfunction signin (values) {\n    return axios.get ('catalog/reqsignin', {params: {username: values.username, password : values.password}})\n    .then (res => {  \n        if (res.data) {\n          console.log(res.data)\n        store.dispatch(signInAction({'name': values.username, 'country': res.data}))\n        FetchingStatAction()\n    } else \n    { throw new SubmissionError({\n        password: 'Wrong username or password',\n        username: 'Wrong username or password',\n        _error: 'Wrong username or password!'}\n        );}\n}\n)}\nconst renderField = ({input, label, type, meta: { touched, error, warning } }) => (\n    <div>\n    <label>{label}</label>\n    <div>\n      <input {...input} placeholder={label} type={type}/>\n      {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\n    </div>\n  </div>\n)\n/* вернуть в форму onSubmit={handleSubmit(signin) */\nclass SignInForm extends React.Component{\n        constructor (props) {\n          super (props) \n          this.state = {\n            finished: null\n          }\n          this.Clear=this.Clear.bind(this);\n        }\n\n          Clear () {\n            this.setState ({finished: true})\n          }\n        render () {\n        const { handleSubmit, pristine, reset, submitting } = this.props\n        return (\n           <form onSubmit={handleSubmit(signin)} className= 'col-9'>\n               <Field name ='username' type = 'text' component={renderField} label = 'Username'/>\n               <Field name ='password' type = 'password' component={renderField} label = 'Password'/>\n             \n                <button className=\"btn btn-outline-primary signinbut\" type = 'submit' onClick={this.Clear} disabled={submitting}>Sign In</button>\n                <button className=\"btn btn-outline-primary clear signinbut\" type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values</button>\n\n          </form>\n)}}\n\n\nexport default reduxForm ({\n    form: 'SignInForm'\n})(SignInForm)"]},"metadata":{},"sourceType":"module"}