{"ast":null,"code":"var _jsxFileName = \"/Users/kristinabuhovtsova/Documents/Countries/client/src/components/SignInForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { SubmissionError } from 'redux-form';\nimport axios from 'axios';\nimport signInAction from '../actions/signInAction';\nimport store from '../store';\nimport '../css/Button.css';\nimport { Redirect } from 'react-router';\n\nfunction signin(values) {\n  return axios.get('catalog/reqsignin', {\n    params: {\n      username: values.username,\n      password: values.password\n    }\n  }).then(res => {\n    if (res.data) {\n      console.log(res.data);\n      store.dispatch(signInAction({\n        'name': values.username,\n        'country': res.data\n      }));\n    } else {\n      throw new SubmissionError({\n        password: 'Wrong username or password',\n        username: 'Wrong username or password',\n        _error: 'Wrong username or password!'\n      });\n    }\n  });\n}\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, label), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({}, input, {\n  placeholder: label,\n  type: type,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, warning))));\n/* вернуть в форму onSubmit={handleSubmit(signin) */\n\n\nclass SignInForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      finished: null\n    };\n    this.Clear = this.Clear.bind(this);\n  }\n\n  Clear() {\n    this.setState({\n      finished: true\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          reset = _this$props.reset,\n          submitting = _this$props.submitting;\n\n    if (this.props.in) {\n      return React.createElement(Redirect, {\n        to: \"/mytravels\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit(signin),\n        className: \"col-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"username\",\n        type: \"text\",\n        component: renderField,\n        label: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"password\",\n        type: \"password\",\n        component: renderField,\n        label: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-outline-primary signinbut\",\n        type: \"submit\",\n        onClick: this.Clear,\n        disabled: submitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Sign In\"), React.createElement(\"button\", {\n        className: \"btn btn-outline-primary clear signinbut\",\n        type: \"button\",\n        disabled: pristine || submitting,\n        onClick: reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Clear Values\"));\n    }\n  }\n\n}\n\nexport default reduxForm({\n  form: 'SignInForm'\n})(SignInForm);","map":{"version":3,"sources":["/Users/kristinabuhovtsova/Documents/Countries/client/src/components/SignInForm.js"],"names":["React","Field","reduxForm","SubmissionError","axios","signInAction","store","Redirect","signin","values","get","params","username","password","then","res","data","console","log","dispatch","_error","renderField","input","label","type","meta","touched","error","warning","SignInForm","Component","constructor","props","state","finished","Clear","bind","setState","render","handleSubmit","pristine","reset","submitting","in","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Field, reduxForm} from 'redux-form'\nimport { SubmissionError } from 'redux-form';\nimport axios from 'axios'\nimport signInAction from '../actions/signInAction';\nimport store from '../store';\nimport '../css/Button.css';\nimport { Redirect } from 'react-router';\n\nfunction signin (values) {\n    return axios.get ('catalog/reqsignin', {params: {username: values.username, password : values.password}})\n    .then (res => {  \n        if (res.data) {\n          console.log(res.data)\n        store.dispatch(signInAction({'name': values.username, 'country': res.data}))\n    }\n     else \n    { throw new SubmissionError({\n        password: 'Wrong username or password',\n        username: 'Wrong username or password',\n        _error: 'Wrong username or password!'}\n        );}\n}\n)}\nconst renderField = ({input, label, type, meta: { touched, error, warning } }) => (\n    <div>\n    <label>{label}</label>\n    <div>\n      <input {...input} placeholder={label} type={type}/>\n      {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\n    </div>\n  </div>\n)\n/* вернуть в форму onSubmit={handleSubmit(signin) */\nclass SignInForm extends React.Component{\n        constructor (props) {\n          super (props) \n          this.state = {\n            finished: null\n          }\n          this.Clear=this.Clear.bind(this);\n        }\n\n          Clear () {\n            this.setState ({finished: true})\n          }\n        render () {\n        const { handleSubmit, pristine, reset, submitting } = this.props\n        if (this.props.in) {\n          return (<Redirect to= '/mytravels'/>)\n        } else {\n        return (\n           <form onSubmit={handleSubmit(signin)} className= 'col-9'>\n               <Field name ='username' type = 'text' component={renderField} label = 'Username'/>\n               <Field name ='password' type = 'password' component={renderField} label = 'Password'/>\n             \n                <button className=\"btn btn-outline-primary signinbut\" type = 'submit' onClick={this.Clear} disabled={submitting}>Sign In</button>\n                <button className=\"btn btn-outline-primary clear signinbut\" type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values</button>\n\n          </form>)}\n}}\n\n\nexport default reduxForm ({\n    form: 'SignInForm'\n})(SignInForm)"]},"metadata":{},"sourceType":"module"}