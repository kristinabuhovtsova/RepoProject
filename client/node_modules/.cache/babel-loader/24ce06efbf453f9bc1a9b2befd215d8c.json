{"ast":null,"code":"import axios from 'axios';\n\nfunction LoadStatAction(bool) {\n  console.log('loading action');\n  return {\n    type: 'STATISTICS_IS_LOADING',\n    isLoading: bool\n  };\n}\n\nfunction StatHasLoaded(statistics) {\n  return {\n    type: 'STATISTICS_HAS_LOADED',\n    statistics\n  };\n}\n\nexport function FetchingStat() {\n  console.log('in fetching');\n  return dispatch => {\n    console.log('inside');\n    dispatch(LoadStatAction(true));\n    /*\n    axios.get('/catalog/statistics')\n    .then((response) => {\n    dispatch(LoadStatAction(false));\n    return response;\n    })\n    .then((response) => response.json())\n    .then((items) => {console.log(items);dispatch(StatHasLoaded(items))})*/\n  };\n}","map":{"version":3,"sources":["/Users/kristinabuhovtsova/Documents/Countries/client/src/actions/LoadStatAction.js"],"names":["axios","LoadStatAction","bool","console","log","type","isLoading","StatHasLoaded","statistics","FetchingStat","dispatch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,SAASC,cAAT,CAAyBC,IAAzB,EAA8B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,SAAQ;AACIC,IAAAA,IAAI,EAAE,uBADV;AAEIC,IAAAA,SAAS,EAAEJ;AAFf,GAAR;AAIH;;AAED,SAASK,aAAT,CAAwBC,UAAxB,EAAoC;AAChC,SAAQ;AACJH,IAAAA,IAAI,EAAE,uBADF;AAEJG,IAAAA;AAFI,GAAR;AAIH;;AAED,OAAO,SAASC,YAAT,GAAwB;AAC3BN,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,SAAQM,QAAD,IAAc;AACjBP,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAM,IAAAA,QAAQ,CAACT,cAAc,CAAC,IAAD,CAAf,CAAR;AAA+B;;;;;;;;AAQlC,GAVD;AAWH","sourcesContent":["import axios from 'axios'\nfunction LoadStatAction (bool){\n    console.log('loading action')\n    return  {\n                type: 'STATISTICS_IS_LOADING',\n                isLoading: bool\n            }; \n}\n   \nfunction StatHasLoaded (statistics) {\n    return  {\n        type: 'STATISTICS_HAS_LOADED',\n        statistics\n    }; \n}\n\nexport function FetchingStat() {\n    console.log('in fetching')\n    return (dispatch) => {\n        console.log('inside')\n        dispatch(LoadStatAction(true));/*\n        axios.get('/catalog/statistics')\n            .then((response) => {\n                dispatch(LoadStatAction(false));\n                return response;\n            })\n            .then((response) => response.json())\n            .then((items) => {console.log(items);dispatch(StatHasLoaded(items))})*/\n    };\n}\n"]},"metadata":{},"sourceType":"module"}