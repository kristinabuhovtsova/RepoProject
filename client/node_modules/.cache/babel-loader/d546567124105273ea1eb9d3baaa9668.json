{"ast":null,"code":"var _jsxFileName = \"/Users/kristinabuhovtsova/Documents/Countries/client/src/components/MyTravelsForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport store from '../store';\nimport changeStatAction from '../actions/changeStatAction';\nimport '../css/Button.css';\nimport axios from 'axios';\n\nconst SendingStatistics = countries => {\n  const usercountry = store.getState().in.country;\n  const username = store.getState().in.username;\n  const viscountries = Object.keys(countries);\n  axios.post('/catalog/users/' + username, {\n    params: {\n      'trav': viscountries\n    }\n  }).then();\n  store.dispatch(changeStatAction(username, usercountry, viscountries));\n  console.log('send!');\n};\n\nclass MyTravelsForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries: [],\n      finished: null\n    };\n    this.Clear = this.Clear.bind(this);\n  }\n\n  Clear() {\n    this.setState({\n      finished: true\n    });\n  }\n\n  componentDidMount() {\n    fetch('catalog/countries').then(res => res.json()).then(count => this.setState({\n      countries: count\n    }));\n  }\n\n  render() {\n    const _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          reset = _this$props.reset,\n          submitting = _this$props.submitting;\n\n    if (this.props.in) {\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit(SendingStatistics),\n        className: \"col-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Choose the countries where you`ve been\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.state.countries.map((country, ind) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, country, \" \"), React.createElement(Field, {\n        name: country,\n        id: ind,\n        component: \"input\",\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }))))), this.state.finished && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Travels added\"), React.createElement(\"button\", {\n        onClick: this.Clear,\n        type: \"submit\",\n        disabled: submitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Submit\"));\n    } else {\n      return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Firstly, you need to sign in\");\n    }\n  }\n\n}\n\nexport default reduxForm({\n  form: 'MyTravelsForm'\n})(MyTravelsForm);","map":{"version":3,"sources":["/Users/kristinabuhovtsova/Documents/Countries/client/src/components/MyTravelsForm.js"],"names":["React","Field","reduxForm","store","changeStatAction","axios","SendingStatistics","countries","usercountry","getState","in","country","username","viscountries","Object","keys","post","params","then","dispatch","console","log","MyTravelsForm","Component","constructor","props","state","finished","Clear","bind","setState","componentDidMount","fetch","res","json","count","render","handleSubmit","pristine","reset","submitting","map","ind","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Field, reduxForm} from 'redux-form'\nimport store from '../store';\nimport changeStatAction from '../actions/changeStatAction';\nimport '../css/Button.css';\nimport axios from 'axios';\n\n\nconst SendingStatistics = (countries) => {\n    const usercountry=store.getState().in.country\n    const username=store.getState().in.username\n    const viscountries=Object.keys(countries)\n    axios.post ('/catalog/users/' + username, {params: {'trav': viscountries}})\n        .then ()\n    store.dispatch (changeStatAction(username, usercountry, viscountries))\n    console.log('send!')\n}\n\n\nclass MyTravelsForm extends React.Component{\n        constructor (props) {\n        super (props) \n        this.state = {countries: [], \n        finished: null}\n        this.Clear=this.Clear.bind(this);\n    }\n\n    Clear () {\n      this.setState ({finished: true})\n    }\n\n        componentDidMount() {\n            fetch ('catalog/countries')\n            .then (res => res.json())\n            .then((count) =>this.setState({countries: count}))}\n\n\n        render () {\n        const { handleSubmit, pristine, reset, submitting } = this.props\n        if (this.props.in) {\n        return (\n           <form onSubmit={handleSubmit(SendingStatistics)} className='col-9'>\n                <div>\n                        <h2>Choose the countries where you`ve been</h2 >\n                        <div>\n                        {this.state.countries.map((country, ind) =>\n                        <div>\n                        <label>{country} </label>\n                        <Field name={country} id={ind} component=\"input\" type=\"checkbox\" />\n                        </div>)}\n                        </div>\n                </div>\n                {this.state.finished && <p>Travels added</p>}\n                <button onClick={this.Clear} type = 'submit' disabled={submitting}>Submit</button>\n               \n                </form>\n        )}\n        else {\n            return <h3>Firstly, you need to sign in</h3>\n        }\n\n}}\n\nexport default reduxForm ({\n    form: 'MyTravelsForm'\n})(MyTravelsForm)"]},"metadata":{},"sourceType":"module"}