{"ast":null,"code":"var _jsxFileName = \"/Users/kristinabuhovtsova/Documents/Countries/client/src/components/SignUp.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.username) {\n    errors.username = 'Required';\n  } else if (values.username.length < 5) {\n    errors.username = 'Must be 5 characters or more';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required';\n  }\n\n  if (!values.confirmpassword) {\n    errors.confirmpassword = 'Required';\n  } else if (values.password !== values.confirmpassword) {\n    errors.password = 'Passwords must match';\n  }\n\n  return errors;\n};\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, label), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({}, input, {\n  placeholder: label,\n  type: type,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, warning))));\n\nclass SignUp extends React.Component {\n  render() {\n    const _props = props,\n          handleSubmit = _props.handleSubmit,\n          pristine = _props.pristine,\n          reset = _props.reset,\n          submitting = _props.submitting;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"username\",\n      type: \"text\",\n      component: renderField,\n      label: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"password\",\n      type: \"text\",\n      component: renderField,\n      label: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"confirmpassword\",\n      type: \"text\",\n      component: renderField,\n      label: \"Confirm password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: submitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Sig Up\"));\n  }\n\n}\n\nexport default reduxForm({\n  form: 'SignUp',\n  validate,\n  warn\n})(SignUp);","map":{"version":3,"sources":["/Users/kristinabuhovtsova/Documents/Countries/client/src/components/SignUp.js"],"names":["React","Field","reduxForm","validate","values","errors","username","length","password","confirmpassword","renderField","input","label","type","meta","touched","error","warning","SignUp","Component","render","props","handleSubmit","pristine","reset","submitting","form","warn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Field, reduxForm} from 'redux-form'\n\nconst validate = values => {\n    const errors = {}\n    if (!values.username) {\n      errors.username = 'Required'\n    } else if (values.username.length < 5) {\n      errors.username = 'Must be 5 characters or more'\n    }\n    if (!values.password) {\n      errors.password = 'Required'\n    }\n    if (!values.confirmpassword) {\n        errors.confirmpassword = 'Required'\n    }\n    else if (values.password!==values.confirmpassword) {\n      errors.password = 'Passwords must match'\n    } \n    \n    return errors\n  }  \n\nconst renderField = ({input, label, type, meta: { touched, error, warning } }) => (\n    <div>\n    <label>{label}</label>\n    <div>\n      <input {...input} placeholder={label} type={type}/>\n      {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\n    </div>\n  </div>\n)\n\n\nclass SignUp extends React.Component {\n    render () {\n        const { handleSubmit, pristine, reset, submitting } = props\n        return (\n           <form onSubmit={handleSubmit}>\n               <Field name ='username' type = 'text' component={renderField} label = 'Username'/>\n               <Field name ='password' type = 'text' component={renderField} label = 'Password'/>\n               <Field name ='confirmpassword' type = 'text' component={renderField} label = 'Confirm password'/>\n            \n                <button type = 'submit' disabled={submitting}>Sig Up</button>\n           </form>\n        )\n    }\n}\n\nexport default reduxForm ({\n    form: 'SignUp',\n    validate, \n    warn\n})(SignUp)"]},"metadata":{},"sourceType":"module"}