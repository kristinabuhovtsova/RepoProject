{"ast":null,"code":"var _jsxFileName = \"/Users/kristinabuhovtsova/Documents/Countries/client/src/components/SignInForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { SubmissionError } from 'redux-form';\nimport axios from 'axios';\nimport signInAction from '../actions/signInAction';\nimport store from '../store';\n\nfunction signin(values) {\n  return axios.get('catalog/reqsignin', {\n    params: {\n      username: values.username,\n      password: values.password\n    }\n  }).then(res => {\n    console.log('!!!' + res.data);\n\n    if (res.data) {\n      store.dispatch(signInAction({\n        'name': values.username,\n        'country': res.data\n      }));\n    } else {\n      throw new SubmissionError({\n        password: 'Wrong username or password',\n        username: 'Wrong username or password',\n        _error: 'Wrong username or password!'\n      });\n    }\n  });\n}\n/*\nreturn (axios.get ('catalog/reqsignin', {params: {'username': values.username, 'password' : values.password}})\n.then(function(res) { if (res.data === 'bad') {\n  throw new SubmissionError({\n      password: 'Wrong username or password',\n      username: 'Wrong username or password',\n      _error: 'Wrong username or password!'}\n      );\n}\nelse {return {\n  type: SIGN_IN, \n  result: 1}\n}}\n}))\n}\n*/\n\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, label), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({}, input, {\n  placeholder: label,\n  type: type,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, warning))));\n/* вернуть в форму onSubmit={handleSubmit(signin) */\n\n\nclass SignInForm extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          reset = _this$props.reset,\n          submitting = _this$props.submitting;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit(signin),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"username\",\n      type: \"text\",\n      component: renderField,\n      label: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"password\",\n      type: \"text\",\n      component: renderField,\n      label: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: submitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Sig In\"), React.createElement(\"button\", {\n      type: \"button\",\n      disabled: pristine || submitting,\n      onClick: reset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Clear Values\"));\n  }\n\n}\n\nexport default reduxForm({\n  form: 'SignInForm'\n})(SignInForm);","map":{"version":3,"sources":["/Users/kristinabuhovtsova/Documents/Countries/client/src/components/SignInForm.js"],"names":["React","Field","reduxForm","SubmissionError","axios","signInAction","store","signin","values","get","params","username","password","then","res","console","log","data","dispatch","_error","renderField","input","label","type","meta","touched","error","warning","SignInForm","Component","constructor","props","render","handleSubmit","pristine","reset","submitting","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Field, reduxForm} from 'redux-form'\nimport { SubmissionError } from 'redux-form';\nimport axios from 'axios'\nimport signInAction from '../actions/signInAction';\nimport store from '../store';\n\nfunction signin (values) {\n    return axios.get ('catalog/reqsignin', {params: {username: values.username, password : values.password}})\n    .then (res => {  console.log('!!!' + res.data);\n        if (res.data) {\n        store.dispatch(signInAction({'name': values.username, 'country': res.data}))\n    } else \n    { throw new SubmissionError({\n        password: 'Wrong username or password',\n        username: 'Wrong username or password',\n        _error: 'Wrong username or password!'}\n        );}\n}\n)}/*\n  return (axios.get ('catalog/reqsignin', {params: {'username': values.username, 'password' : values.password}})\n  .then(function(res) { if (res.data === 'bad') {\n    throw new SubmissionError({\n        password: 'Wrong username or password',\n        username: 'Wrong username or password',\n        _error: 'Wrong username or password!'}\n        );\n  }\n  else {return {\n    type: SIGN_IN, \n    result: 1}\n}}\n}))\n}\n*/\nconst renderField = ({input, label, type, meta: { touched, error, warning } }) => (\n    <div>\n    <label>{label}</label>\n    <div>\n      <input {...input} placeholder={label} type={type}/>\n      {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\n    </div>\n  </div>\n)\n/* вернуть в форму onSubmit={handleSubmit(signin) */\nclass SignInForm extends React.Component{\n        constructor (props) {\n          super (props) }\n        render () {\n        const { handleSubmit, pristine, reset, submitting } = this.props\n        return (\n           <form onSubmit={handleSubmit(signin)}>\n               <Field name ='username' type = 'text' component={renderField} label = 'Username'/>\n               <Field name ='password' type = 'text' component={renderField} label = 'Password'/>\n             \n                <button type = 'submit' disabled={submitting}>Sig In</button>\n                <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values</button>\n          </form>\n)}}\n\nexport default reduxForm ({\n    form: 'SignInForm'\n})(SignInForm)"]},"metadata":{},"sourceType":"module"}