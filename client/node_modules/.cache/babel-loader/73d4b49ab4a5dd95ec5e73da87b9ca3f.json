{"ast":null,"code":"var _jsxFileName = \"/Users/kristinabuhovtsova/Documents/Countries/client/src/components/Statistics.js\";\nimport React from 'react';\n\nfunction comparePop(a, b) {\n  return b.visits - a.visits;\n}\n\nclass Statistics extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      countries: []\n    };\n  }\n\n  componentDidMount() {\n    let list = [];\n    fetch('catalog/countries').then(res => res.json()).then(count => {\n      count.forEach(one => list.push({\n        'name': one,\n        'visits': 0\n      }));\n      this.setState({\n        countries: list\n      });\n    });\n  }\n\n  render() {\n    let topcountries = this.state.countries;\n    this.props.stat.forEach(data => {\n      data.viscountries.forEach(country => {\n        if (topcountries.find(item => item.name == country)) {\n          topcountries.find(item => item.name == country).visits += 1;\n        }\n      });\n    });\n    topcountries.sort(comparePop);\n    topcountries = topcountries.slice(0, 10);\n    console.log(topcountries);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Top 10 of the most popular countries for travel:\"), topcountries.map(one => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, one.name, \" (Visits:\", one.visits, \")\")));\n  }\n\n}\n\nexport default Statistics;","map":{"version":3,"sources":["/Users/kristinabuhovtsova/Documents/Countries/client/src/components/Statistics.js"],"names":["React","comparePop","a","b","visits","Statistics","Component","constructor","state","countries","componentDidMount","list","fetch","then","res","json","count","forEach","one","push","setState","render","topcountries","props","stat","data","viscountries","country","find","item","name","sort","slice","console","log","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;AACxB,SAAQA,CAAC,CAACC,MAAF,GAAWF,CAAC,CAACE,MAArB;AACD;;AAED,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAEvCC,EAAAA,WAAW,GAAI;AACb;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,IAAI,GAAC,EAAT;AACAC,IAAAA,KAAK,CAAE,mBAAF,CAAL,CACCC,IADD,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAECF,IAFD,CAEOG,KAAD,IAAW;AAACA,MAAAA,KAAK,CAACC,OAAN,CAAgBC,GAAD,IAASP,IAAI,CAACQ,IAAL,CAAW;AAAC,gBAAQD,GAAT;AAAc,kBAAU;AAAxB,OAAX,CAAxB;AAAgE,WAAKE,QAAL,CAAc;AAACX,QAAAA,SAAS,EAAEE;AAAZ,OAAd;AAAiC,KAFnH;AAGD;;AAIGU,EAAAA,MAAM,GAAI;AACV,QAAIC,YAAY,GAAC,KAAKd,KAAL,CAAWC,SAA5B;AACA,SAAKc,KAAL,CAAWC,IAAX,CAAgBP,OAAhB,CAAwBQ,IAAI,IAAG;AAACA,MAAAA,IAAI,CAACC,YAAL,CAAkBT,OAAlB,CAA0BU,OAAO,IAAI;AACnE,YAAIL,YAAY,CAACM,IAAb,CAAmBC,IAAI,IAAIA,IAAI,CAACC,IAAL,IAAWH,OAAtC,CAAJ,EAAmD;AACnDL,UAAAA,YAAY,CAACM,IAAb,CAAmBC,IAAI,IAAIA,IAAI,CAACC,IAAL,IAAWH,OAAtC,EAA+CvB,MAA/C,IAAuD,CAAvD;AAAyD;AAC1D,OAH+B;AAG7B,KAHH;AAIAkB,IAAAA,YAAY,CAACS,IAAb,CAAkB9B,UAAlB;AACAqB,IAAAA,YAAY,GAACA,YAAY,CAACU,KAAb,CAAmB,CAAnB,EAAsB,EAAtB,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,YAAZ;AAEI,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DADJ,EAEKA,YAAY,CAACa,GAAb,CAAkBjB,GAAG,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,GAAG,CAACY,IAAR,eAAuBZ,GAAG,CAACd,MAA3B,MAAzB,CAFL,CADJ;AAOH;;AAnCgC;;AAuCzC,eAAeC,UAAf","sourcesContent":["import React from 'react';\n\nfunction comparePop(a, b) {\n  return  b.visits - a.visits;\n}\n\nclass Statistics extends React.Component {\n  \n  constructor () {\n    super ()\n    this.state = {\n      countries: []\n    }\n  }\n\n  componentDidMount() {\n      let list=[]\n      fetch ('catalog/countries')\n      .then (res => res.json())\n      .then((count) => {count.forEach ((one) => list.push ({'name': one, 'visits': 0}));this.setState({countries: list})})\n    }\n    \n\n      \n        render () {\n        let topcountries=this.state.countries\n        this.props.stat.forEach(data=> {data.viscountries.forEach(country => {\n          if (topcountries.find (item => item.name==country)){\n          topcountries.find (item => item.name==country).visits+=1}\n        })})\n        topcountries.sort(comparePop);\n        topcountries=topcountries.slice(0, 10)\n        console.log(topcountries)\n\n            return (\n                <div>\n                    <h3>Top 10 of the most popular countries for travel:</h3>\n                    {topcountries.map (one => <p>{one.name} (Visits:{one.visits})</p>)}\n                </div>\n\n            )\n        }\n}\n\n\nexport default Statistics"]},"metadata":{},"sourceType":"module"}